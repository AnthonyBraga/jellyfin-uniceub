name: Jellyfin CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup_environment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
      - run: dotnet --version

  build_project:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Restore dependencies
        run: dotnet restore
      - name: Build the project
        run: dotnet build --no-restore --configuration Release

  run_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run tests
        run: dotnet test --no-restore --verbosity normal

  merge_coverage_results:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool --version 5.1.10
      - name: Merge coverage results
        run: reportgenerator "-reports:**/coverage.cobertura.xml" "-targetdir:merged/" "-reporttypes:Cobertura"
    artifacts:
      paths:
        - merged/
      expire_in: 1 week

  sonarqube_scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run SonarQube scan
        run: |
          sonar-scanner \
            -Dsonar.projectKey=my-project-key \
            -Dsonar.sources=. \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.cs.opencover.reportsPaths=**/coverage.opencover.xml

  publish_artifacts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Publish artifacts
        run: |
          dotnet publish --configuration Release --output ./output
          echo "Artifacts published in ./output"
    artifacts:
      paths:
        - ./output
